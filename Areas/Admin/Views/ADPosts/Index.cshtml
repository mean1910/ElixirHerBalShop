@model X.PagedList.IPagedList<Elixir.Models.Post>

@{
    ViewData["Title"] = "Post";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="container mt-4">
    <!-- Tìm kiếm -->
    <form class="form-inline mb-3" action="/Admin/ADPosts/Index" method="GET">
        <div class="input-group">
            <input type="text" class="form-control bg-light border-0 small" placeholder="Tìm kiếm..." name="searchQuery" value="@ViewData["searchQuery"]" aria-label="Tìm kiếm" aria-describedby="basic-addon2">
            <div class="input-group-append">
                <button class="btn btn-primary" type="submit">
                    <i class="fas fa-search fa-sm"></i>
                </button>
            </div>
        </div>
    </form>


    <hr>

    <a asp-action="Create" class="btn btn-primary mb-2">
        <i class="bi bi-plus-lg"></i> Tạo mới
    </a>
    <h1 class="mb-4">Danh sách bài viết</h1>

    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-md-12 mb-4">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-3">
                                @if (!string.IsNullOrEmpty(item.PostImage))
                                {
                                    <img src="@Url.Content(item.PostImage)" class="img-thumbnail" alt="Hình ảnh">
                                }
                                else
                                {
                                    <span>Không có hình ảnh</span>
                                }
                            </div>
                            <div class="col-md-9">
                                <h5 class="card-title">@Html.DisplayFor(modelItem => item.Title)</h5>
                                <p class="card-text">@Html.DisplayFor(modelItem => item.ShortContent)</p>
                                <p class="card-text"><strong>Tác giả:</strong> @Html.DisplayFor(modelItem => item.Author)</p>
                                <p class="card-text"><strong>Ngày tạo:</strong> @Html.DisplayFor(modelItem => item.DateCreate)</p>

                                @if (item.Status)
                                {
                                    <p class="card-text text-success"><strong>Trạng thái: Hiển thị trên trang chủ</strong></p>
                                }
                                else
                                {
                                    <p class="card-text text-danger"><strong>Trạng thái: Đã gỡ xuống</strong></p>
                                }

                                <div>
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-success btn-sm">
                                        <i class="fas fa-edit"></i> Sửa
                                    </a>
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">
                                        <i class="fas fa-info-circle"></i> Chi tiết
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">
                                        <i class="fas fa-trash-alt"></i> Xóa
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = 1, searchQuery = ViewData["searchQuery"] })">First</a>
            </li>
            @for (int i = 1; i <= Model.PageCount; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, searchQuery = ViewData["searchQuery"] })">@i</a>
                </li>
            }
            <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.PageCount, searchQuery = ViewData["searchQuery"] })">Last</a>
            </li>
        </ul>
    </nav>
</div>
