@model X.PagedList.IPagedList<Elixir.Models.Product>

@{
    ViewData["Title"] = "Sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<p>
    <a class="btn btn-primary" asp-action="Create"><i class="fa fa-plus"></i> Tạo mới</a>
</p>

<table class="table table-striped table-bordered">
    <thead class="thead-dark">
        <tr>
            <th>Hình ảnh</th>
            <th>Tên sản phẩm</th>
            <th>Giá</th>
            <th>Danh mục</th>
            <th>Giảm giá</th>
            <th>Trạng thái kho</th>
            <th>Trạng thái</th>
            <th>Hành động</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <img src="@item.ImageUrl" width="100px" alt="@item.Name" />
                </td>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@String.Format("{0:C0} VNĐ", item.Price)</td>
                <td>@Html.DisplayFor(modelItem => item.Category.Name)</td>
                <td>
                    @if (item.Discounts != null)
                    {
                        @Html.DisplayFor(modelItem => item.Discounts.Id)
                    }
                    else
                    {
                        <span>Không có giảm giá</span>
                    }
                </td>
                <td>
                    @{
                        var unit = 1; // Giả sử unit mặc định là 1 nếu không có giá trị khác
                        var unitsInStock = item.QuantityInStock / unit;
                        var stockClass = "";
                        var stockText = "";
                        if (unitsInStock == 0)
                        {
                            stockClass = "badge badge-danger";
                            stockText = "Hết hàng";
                        }
                        else if (unitsInStock < 10)
                        {
                            stockClass = "badge badge-warning";
                            stockText = $"Sắp hết hàng (còn {unitsInStock} phần)";
                        }
                        else
                        {
                            stockClass = "badge badge-success";
                            stockText = $"Còn hàng (còn {unitsInStock} phần)";
                        }
                    }
                    <span class="@stockClass">@stockText</span>
                </td>
                <td>
                    @{
                        var statusClass = item.Status ? "badge badge-success" : "badge badge-secondary";
                        var statusText = item.Status ? "Đang bày bán" : "Đã gỡ xuống";
                    }
                    <span class="@statusClass">@statusText</span>
                </td>
                <td class="text-center">
                    <div class="btn-group-vertical">
                        <a class="btn btn-sm btn-warning mb-2" asp-action="Edit" asp-route-id="@item.Id" title="Chỉnh sửa"><i class="fa fa-pencil-alt"></i></a>
                        <a class="btn btn-sm btn-info mb-2" asp-action="Details" asp-route-id="@item.Id" title="Chi tiết"><i class="fa fa-search"></i></a>
                        <a class="btn btn-sm btn-danger" asp-action="Delete" asp-route-id="@item.Id" title="Xóa"><i class="fa fa-trash"></i></a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Ví dụ điều hướng trang">
    <ul class="pagination justify-content-center">
        <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = 1 })">Đầu tiên</a>
        </li>
        <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">Trước</a>
        </li>
        @for (int i = 1; i <= Model.PageCount; i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
            </li>
        }
        <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">Tiếp</a>
        </li>
        <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageCount })">Cuối cùng</a>
        </li>
    </ul>
</nav>

<style>
    .btn-group-vertical .btn {
        width: 100%;
    }

        .btn-group-vertical .btn:not(:last-child) {
            margin-bottom: 10px;
        }
</style>